 package com.spring.service;

 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 import com.spring.model.Users;
 import com.spring.repository.UsersRepository;
 import java.util.List;
 import java.util.Optional;

 /*
    File generated By
    Christooj_Generation_Code
 */
 @Service
 public class UsersService {
    private final UsersRepository repo;

    public Users getUserC(Integer id) {
      return repo.getUserConnecte(id);
  }

    public Users getByEmail(String email) {
      return repo.findByEmail(email);
  }


    @Autowired
    public UsersService(UsersRepository rep) {
        this.repo = rep;
    }
    
    public Users create(Users object) {
       return repo.save(object);
   }


    public List<Users> read() {
       return repo.findAll();
    }

    public Optional<Users> readById(int id) {
       return repo.findById(id);
    }

    public Users update(int id, Users object) {
       try {

           Optional<Users> optional = repo.findById(id);
           if (optional.isPresent()) {
               Users existing = optional.get();
               existing = (Users) com.spring.utility.Utilitaire.addValueObject(existing,object);
               return repo.save(existing);
           }
       return null;
       }catch(Exception ex){
           ex.printStackTrace();
           return null;
       }
    }

    public void delete(int id) {
       repo.deleteById(id);
    }

    public Users verificationLogin(String email , String mdp) {
      return repo.findByEmailAndMdp(email, mdp);        
   }

   public Long getIdByEmailAndNom(String email , String mdp){
      return repo.findIdByEmailAndMdp(email,mdp);
   }
}

