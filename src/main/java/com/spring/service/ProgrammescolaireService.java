 package com.spring.service;

 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 import com.spring.model.Programmescolaire;
 import com.spring.repository.ProgrammescolaireRepository;

import java.util.ArrayList;
import java.util.List;
 import java.util.Optional;

 /*
    File generated By
    Christooj_Generation_Code
 */
 @Service
 public class ProgrammescolaireService {
    private final ProgrammescolaireRepository repo;

    public List<Double> getStatutPrograms(int idmatiereclasse) {
      List<Double> response = new ArrayList<>() ;

      Double done = repo.done();
      Double notdone = repo.notdone();
      List<Programmescolaire> list = repo.findByIdmatiereclasse(idmatiereclasse);

      Double doneCalcul = (100 * done) / list.size();
      //System.out.println("100 * "+done+") / "+list.size()+"\n");
      response.add(doneCalcul);
      Double notdoneCalcul = (100 * notdone) / list.size();
      response.add(notdoneCalcul);
      //System.out.println("100 * "+notdone+") / "+list.size()+"\n");

      return response;
   }

    public List<Programmescolaire> getByIdmatiereclasse(int idmatiereclasse) {
      return repo.findByIdmatiereclasse(idmatiereclasse);
   }

    @Autowired
    public ProgrammescolaireService(ProgrammescolaireRepository rep) {
        this.repo = rep;
    }

    public Programmescolaire create(Programmescolaire object) {
       return repo.save(object);
   }


    public List<Programmescolaire> read() {
       return repo.findAll();
    }

    public Optional<Programmescolaire> readById(int id) {
       return repo.findById(id);
    }

    public Programmescolaire update(int id, Programmescolaire object) {
       try {

           Optional<Programmescolaire> optional = repo.findById(id);
           if (optional.isPresent()) {
               Programmescolaire existing = optional.get();
               existing = (Programmescolaire) com.spring.utility.Utilitaire.addValueObject(existing,object);
               return repo.save(existing);
           }
       return null;
       }catch(Exception ex){
           ex.printStackTrace();
           return null;
       }
    }

    public void delete(int id) {
       repo.deleteById(id);
    }



}

