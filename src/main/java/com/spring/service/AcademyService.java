 package com.spring.service;

 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 import com.spring.model.Academy;
 import com.spring.repository.AcademyRepository;
 import java.util.List;
 import java.util.Optional;

 /*
    File generated By
    Christooj_Generation_Code
 */
 @Service
 public class AcademyService {
    private final AcademyRepository repo;

    public List<Academy> findByid(Integer id) {
      return repo.findByIdAcademy(id);
   }

    @Autowired
    public AcademyService(AcademyRepository rep) {
        this.repo = rep;
    }

    public Academy create(Academy object) {
       return repo.save(object);
   }


    public List<Academy> read() {
       return repo.findAll();
    }

    public Optional<Academy> readById(int id) {
       return repo.findById(id);
    }

    public Optional<Academy> readById(Long id) {
      return readById(id.intValue());
   }

    public Academy update(int id, Academy object) {
       try {

           Optional<Academy> optional = repo.findById(id);
           if (optional.isPresent()) {
               Academy existing = optional.get();
               existing = (Academy) com.spring.utility.Utilitaire.addValueObject(existing,object);
               return repo.save(existing);
           }
       return null;
       }catch(Exception ex){
           ex.printStackTrace();
           return null;
       }
    }

    public void delete(int id) {
       repo.deleteById(id);
    }

    public Long getIdAcademy(String nom , String email) {
      return repo.findIdByNomAndEmail(nom , email).get(0);
    }

}

