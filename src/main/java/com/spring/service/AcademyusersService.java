 package com.spring.service;

 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 import com.spring.model.Academyusers;
 import com.spring.repository.AcademyusersRepository;
 import java.util.List;
 import java.util.Optional;

 /*
    File generated By
    Christooj_Generation_Code
 */
 @Service
 public class AcademyusersService {
    private final AcademyusersRepository repo;

    @Autowired
    public AcademyusersService(AcademyusersRepository rep) {
        this.repo = rep;
    }

    public Academyusers create(Academyusers object) {
       return repo.save(object);
   }

   public Academyusers findAcademyId(int iduser) {
      return repo.findByUsers(iduser);
   }

    public List<Academyusers> read() {
       return repo.findAll();
    }

    public Optional<Academyusers> readById(int id) {
       return repo.findById(id);
    }

    public Academyusers update(int id, Academyusers object) {
       try {

           Optional<Academyusers> optional = repo.findById(id);
           if (optional.isPresent()) {
               Academyusers existing = optional.get();
               existing = (Academyusers) com.spring.utility.Utilitaire.addValueObject(existing,object);
               return repo.save(existing);
           }
       return null;
       }catch(Exception ex){
           ex.printStackTrace();
           return null;
       }
    }

    public void delete(int id) {
       repo.deleteById(id);
    }

   public boolean existeByUser(Integer id) {
      
      return repo.existsByUsersId(id);
   }

   public int getAcademy_id(int user_id) {
      return repo.findByAcademy(user_id);
   }

}

