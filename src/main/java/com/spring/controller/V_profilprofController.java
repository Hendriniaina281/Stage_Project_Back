package com.spring.controller;

import com.spring.model.Users;
import com.spring.model.V_profilprof;
import com.spring.service.TokenService;
import com.spring.service.V_profilprofService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;

/*
   File generated By
   Christooj_Generation_Code
*/
@RestController
@RequestMapping("/V_profilprof")
@CrossOrigin("*")
public class V_profilprofController{
   @Autowired
   private V_profilprofService services;

   @Autowired
   TokenService servicetoken;


   @GetMapping("/findProfil")
    public List<V_profilprof> getProfil(@RequestHeader("Authorization") String token) {
        try {
            Users user = servicetoken.getUser(token);
            List<V_profilprof> all = services.getProfilProf(user.getId());
            return all;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }


   @PostMapping("/create")
    public String create(@RequestBody V_profilprof object) {
    try {
        services.create(object);
        return "Cr��e avec succ�s";
    } catch (Exception e) {
        e.printStackTrace();
        return "Erreur lors de la cr�ation: " + e.getMessage();
    }
}

   @GetMapping("/find")
    public List<V_profilprof> getAll() {
        try {
            List<V_profilprof> all = services.read();
            return all;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @GetMapping("/find/{id}")
    public V_profilprof getById(@PathVariable int id) {
        try {
            Optional<V_profilprof> optional = services.readById(id);
            return  optional.get();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @PutMapping("/update/{id}")
    public V_profilprof update(@PathVariable int id, @RequestBody V_profilprof object) {
        try {
            V_profilprof updated = services.update(id,object);
            return updated;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @DeleteMapping("/delete/{id}")
    public String delete(@PathVariable int id) {
        try {
            services.delete(id);
            return "Success";
        } catch (Exception e) {
            e.printStackTrace();
           return "Il ya erreur: "+e.getMessage();
        }
    }


}

