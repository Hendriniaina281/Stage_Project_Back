package com.spring.controller;

import com.spring.model.Csvnoteeleveecole;
import com.spring.model.Noteetudiantecole;
import com.spring.service.CsvmatiereclasseService;
import com.spring.service.CsvnoteeleveecoleService;
import com.spring.service.NoteetudiantecoleService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import java.util.Optional;

/*
   File generated By
   Christooj_Generation_Code
*/
@RestController
@RequestMapping("/Noteetudiantecole")
@CrossOrigin("*")
public class NoteetudiantecoleController{
   @Autowired
   private NoteetudiantecoleService services;
   

   @Autowired
   private CsvnoteeleveecoleService csvService;

   @GetMapping("/findNoteBytrim/{idtrimestre}/{idmatiereclasse}")
    public int getNoteTrim(@PathVariable int idtrimestre,@PathVariable int idmatiereclasse) {
        try {
            List<Noteetudiantecole> all = services.getNoteTrim(idtrimestre,idmatiereclasse);
            if(all.size() == 0){
                return 0;
            }else{
                return 1;
            }
        } catch (Exception e) {
            e.printStackTrace();
            return 9;
        }
    }

   @PostMapping("/insertNote/{idtrimestre}/{idmatiereclasse}/{idanne}")
    public String insertNote(@RequestParam("file") MultipartFile file,@PathVariable int idtrimestre,@PathVariable int idmatiereclasse,@PathVariable int idanne) {
    try {
        List<Csvnoteeleveecole> list = csvService.importExcelFileNote(file);
        csvService.saveDataFile(list);
        services.insertNotes(idtrimestre, idmatiereclasse, idanne);
        csvService.clearAllData();
        return "Cr��e avec succ�s";
    } catch (Exception e) {
        e.printStackTrace();
        return "Erreur lors de la cr�ation: " + e.getMessage();
    }
}

   @PostMapping("/create")
    public String create(@RequestBody Noteetudiantecole object) {
    try {
        services.create(object);
        return "Cr��e avec succ�s";
    } catch (Exception e) {
        e.printStackTrace();
        return "Erreur lors de la cr�ation: " + e.getMessage();
    }
}

   @GetMapping("/find")
    public List<Noteetudiantecole> getAll() {
        try {
            List<Noteetudiantecole> all = services.read();
            return all;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @GetMapping("/find/{id}")
    public Noteetudiantecole getById(@PathVariable int id) {
        try {
            Optional<Noteetudiantecole> optional = services.readById(id);
            return  optional.get();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @PutMapping("/update/{id}")
    public Noteetudiantecole update(@PathVariable int id, @RequestBody Noteetudiantecole object) {
        try {
            Noteetudiantecole updated = services.update(id,object);
            return updated;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @DeleteMapping("/delete/{id}")
    public String delete(@PathVariable int id) {
        try {
            services.delete(id);
            return "Success";
        } catch (Exception e) {
            e.printStackTrace();
           return "Il ya erreur: "+e.getMessage();
        }
    }


}

