package com.spring.controller;

import com.spring.model.Etudiant;
import com.spring.model.Users;
import com.spring.service.EtudiantService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Collections;
import java.util.List;
import java.util.Optional;

/*
   File generated By
   Christooj_Generation_Code
*/
@RestController
@RequestMapping("/Etudiant")
@CrossOrigin("*")
public class EtudiantController{
   @Autowired
   private EtudiantService services;

   @PostMapping("/create")
   public ResponseEntity<?> create(@RequestBody Etudiant object) {
       try {
            Etudiant userId = services.create(object); 
           return ResponseEntity.ok(Collections.singletonMap("id", userId));
       } catch (Exception e) {
           e.printStackTrace();
           return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                   .body(Collections.singletonMap("error", "Erreur lors de la cr√©ation: " + e.getMessage()));
       }
   }

   @GetMapping("/find")
    public List<Etudiant> getAll() {
        try {
            List<Etudiant> all = services.read();
            return all;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @GetMapping("/find/{id}")
    public Etudiant getById(@PathVariable int id) {
        try {
            Optional<Etudiant> optional = services.readById(id);
            return  optional.get();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @PutMapping("/update/{id}")
    public Etudiant update(@PathVariable int id, @RequestBody Etudiant object) {
        try {
            Etudiant updated = services.update(id,object);
            return updated;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @DeleteMapping("/delete/{id}")
    public String delete(@PathVariable int id) {
        try {
            services.delete(id);
            return "Success";
        } catch (Exception e) {
            e.printStackTrace();
           return "Il ya erreur: "+e.getMessage();
        }
    }


}

