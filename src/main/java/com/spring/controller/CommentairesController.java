package com.spring.controller;

import com.spring.model.Commentaires;
import com.spring.repository.CommentairesRepository;
import com.spring.service.CommentairesService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

/*
   File generated By
   Christooj_Generation_Code
*/
@RestController
@RequestMapping("/Commentaires")
@CrossOrigin("*")
public class CommentairesController{
   @Autowired
   private CommentairesService services;

    @Autowired
    private CommentairesRepository commentairesRepository;

    @GetMapping("/getComment/{programmeId}")
    public List<Commentaires> getComments(@PathVariable Integer programmeId) {
        return services.getCommentsByProgramme(programmeId);
    }

    @PostMapping("/addcomment")
    public Commentaires addComment(@RequestBody Commentaires newComment) {
        newComment.setDatecreation(LocalDateTime.now());
        //System.out.println("test   "+newComment.getCommentaire()+"   parent    "+newComment.getParentCommentId());
        return commentairesRepository.save(newComment);
    }


   @PostMapping("/create")
    public String create(@RequestBody Commentaires object) {
    try {
        services.create(object);
        return "Cr��e avec succ�s";
    } catch (Exception e) {
        e.printStackTrace();
        return "Erreur lors de la cr�ation: " + e.getMessage();
    }
}

   @GetMapping("/find")
    public List<Commentaires> getAll() {
        try {
            List<Commentaires> all = services.read();
            return all;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @GetMapping("/find/{id}")
    public Commentaires getById(@PathVariable int id) {
        try {
            Optional<Commentaires> optional = services.readById(id);
            return  optional.get();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @PutMapping("/update/{id}")
    public Commentaires update(@PathVariable int id, @RequestBody Commentaires object) {
        try {
            Commentaires updated = services.update(id,object);
            return updated;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

   @DeleteMapping("/delete/{id}")
    public String delete(@PathVariable int id) {
        try {
            services.delete(id);
            return "Success";
        } catch (Exception e) {
            e.printStackTrace();
           return "Il ya erreur: "+e.getMessage();
        }
    }


}

